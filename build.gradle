buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.2"
group "org.grails.plugins"

apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"

jar {
    exclude "layouts/**/**"
    exclude "grails/plugins/executor/test/**/**"
}

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-logging"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    compile "org.grails:grails-core"

    testCompile "org.grails:grails-plugin-testing"

    provided "org.grails.plugins:hibernate4"

    profile "org.grails.profiles:web-plugin"
}

grailsPublish {
    user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
    userOrg = 'uberall'
    githubSlug = 'uberall/grails-executor'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails-Executor"
    desc = "Concurrency / asynchronous / background process plugin"
    developers = ["bp-FLN": "Florian Langenhahn"]
    portalUser = ""
    portalPassword = ""
}
